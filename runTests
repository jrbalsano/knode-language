#!/bin/sh

UPLINE=$(tput cuu1)
ERASELINE=$(tput el)
ERRORS=""
TESTEDFILES=0
ERRORCOUNT=0
TESTINGSTRING=""
PrepCounts() {
  passFiles=(tests/*-pass.kn);
  passFileCount=${#passFiles[@]};
  failFiles=(tests/*-fail.kn);
  failFileCount=${#failFiles[@]};
  totalFiles=$((passFileCount+failFileCount));
  echo "Commencing testing for $passFileCount passing tests and $failFileCount failing tests for $totalFiles total tests.\n";
}
PrintStatus() {
  echo "$ERASELINE$UPLINE$ERASELINE$UPLINE$ERASELINE\c"
  if [ $TESTEDFILES -eq $totalFiles ]
  then
    if [ $ERRORCOUNT -gt 0 ]
    then
      echo "Testing Complete. Errors in $ERRORCOUNT of $TESTEDFILES tests."
    else
      echo "Testing Complete. No Errors."
    fi
  else
    echo "Testing \"$CURRENTFILE\" ($TESTEDFILES of $totalFiles)"
  fi
  echo $TESTINGSTRING
}
TestFile() {
  testname=$(echo $CURRENTFILE | sed -nE 's!tests/(.*)-(pass|fail).kn!\1!p');
  `$(./knode $CURRENTFILE tests/$testname.out >tests/$testname.log 2>&1 )`;
  if [ $? -eq $1 ]
  then
    TESTINGSTRING+="\b\033[32m.\033[0m";
  else
    tmperrors=$(<tests/$testname.log);
    ERRORS="$ERRORS\n\033[34mIn file $CURRENTFILE:\033[0m\n$tmperrors\n";
    ERRORCOUNT=$((ERRORCOUNT+1));
    TESTINGSTRING+="\b\033[31mF\033[0m";
  fi
}
PrepCounts
for file in "${passFiles[@]}"
do
  TESTINGSTRING+="\033[33m.\033[0m"
  CURRENTFILE=$file
  TESTEDFILES=$((TESTEDFILES+1))
  PrintStatus
  TestFile 0
  PrintStatus
done
for file in "${failFiles[@]}"
do
  TESTINGSTRING+="\033[33m.\033[0m"
  CURRENTFILE=$file
  TESTEDFILES=$((TESTEDFILES+1))
  PrintStatus
  TestFile 1
  PrintStatus
done
echo "$ERRORS"
#for ((i = 0; i <= 50; i++))
#do
#for ((j = 0; j <= i; j++))
#do
#echo "=\c"
#done
#echo "\r\c"
#sleep 1
#done
#echo ""
